$(function () {
        $("input").typing(), $(".as-input").asInput(), $(".chat").chat(), $(".modal-calendar").calendar(), $('[data-toggle="popover"]').popover(), $('[data-toggle="tooltip"]').tooltip(), $('[data-toggle="suggestion"]').suggestion(), $('[data-toggle="file-manager"]').fileManager()
    }),
    function (e) {
        e.fn.calendar = function (t, n) {
            var a = e(this);
            return "date" !== t || n ? "query:date" !== t || n ? this.each(function () {
                switch ((n = n instanceof Date ? n : a.prop("query") || new Date).setHours(0, 0, 0, 0), t) {
                    case "date":
                        e.fn.calendar.change.apply(this, [n]);
                        break;
                    case "query:date":
                        e.fn.calendar.query.apply(this, [n]);
                        break;
                    case "query:nextMonth":
                        e.fn.calendar.query.apply(this, [n.addMonths(1)]);
                        break;
                    case "query:nextYear":
                        e.fn.calendar.query.apply(this, [n.addYears(1)]);
                        break;
                    case "query:previousMonth":
                        e.fn.calendar.query.apply(this, [n.addMonths(-1)]);
                        break;
                    case "query:previousYear":
                        e.fn.calendar.query.apply(this, [n.addYears(-1)]);
                        break;
                    default:
                        e.fn.calendar.modal.apply(this, [n])
                }
            }) : a.prop("query") : a.prop("date")
        }
    }(jQuery),
    function (e) {
        e.fn.camera = function (t) {
            return this.each(function () {
                switch (t) {
                    case "play":
                        e.fn.camera.play.apply(this);
                        break;
                    case "stop":
                        e.fn.camera.stop.apply(this);
                        break;
                    case "snapshot":
                        e.fn.camera.snapshot.apply(this)
                }
            })
        }
    }(jQuery),
    function (e) {
        e.fn.chat = function () {
            return this.each(function () {
                var t = e(window),
                    n = e(".app-content"),
                    a = e(this),
                    i = a.find(".chat-messages");
                t.on("resize", function () {
                    var t = 0;
                    n.children().each(function () {
                        e(this).is(".chat") || (t += e(this).outerHeight(!0))
                    }), a.height(n.height() - t), a.addClass("chat-on"), i.scrollToBottom()
                }), t.trigger("resize")
            })
        }
    }(jQuery),
    function (e) {
        e.fn.fileManager = function () {
            return this.each(function () {
                var t = e(this),
                    n = e("<input/>").attr("type", "file");
                n.on("change", function () {
                    var a = n.get(0).files[0];
                    a && (e.fn.fileManager.validate(a, t), e.fn.fileManager.read(a, function () {
                        t.trigger("file:change", a)
                    }))
                }), t.on("click", function () {
                    n.trigger("click")
                })
            })
        }
    }(jQuery),
    function (e) {
        e.fn.asInput = function () {
            return this.each(function () {
                var t = e(this),
                    n = t.find("input"),
                    a = function () {
                        t.toggleClass("disabled", n.is("[disabled]")), t.toggleClass("readonly", n.is("[readonly]"))
                    };
                t.on("click", function () {
                    n.focus()
                }), n.on("focus", function () {
                    t.addClass("focus")
                }).on("blur", function () {
                    t.removeClass("focus")
                }).observe(a), a()
            })
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion = function (t) {
            return this.each(function () {
                (function () {
                    e(this).data("suggestion:initialized") || (e.fn.suggestion.select.apply(this), e.fn.suggestion.change.apply(this), e(this).is("[data-async]") ? e.fn.suggestion.async.apply(this) : e.fn.suggestion.static.apply(this), e(this).data("suggestion:initialized", !0))
                }).apply(this), "refresh" === t && e(this).trigger("suggestion:refresh")
            })
        }
    }(jQuery), $.fn.onFocusOut = function (e) {
        return this.each(function () {
            var t = $(document),
                n = $(this);

            function a(t) {
                $(t.target).closest(n).length || "function" == typeof e && e.call(this)
            }
            t.on("click", a), t.find("input").on("focus", a), t.find("select").on("focus", a), t.find("textarea").on("focus", a), t.find("button").on("focus", a), t.find("a").on("focus", a)
        })
    },
    function (e) {
        e.fn.observe = function (t) {
            var n = new MutationObserver(function (e) {
                e.forEach(function (e) {
                    t.apply(e.target)
                })
            });
            return this.each(function () {
                var a = e(this);
                a.on("DOMAttrModified onpropertychange", function () {
                    t.apply(this)
                }), n.observe(a.get(0), {
                    attributes: !0
                })
            })
        }
    }(jQuery),
    function (e) {
        e.fn.scrollToBottom = function () {
            return this.each(function () {
                var t = e(this),
                    n = t.prop("scrollHeight");
                t.scrollTop(n)
            })
        }
    }(jQuery), $.fn.typing = function () {
        return this.each(function () {
            var e = $(this),
                t = null;
            e.on("input", function () {
                clearTimeout(t), t = setTimeout(function () {
                    e.trigger("input:delay")
                }, 700)
            })
        })
    }, $(function () {
        $('[data-toggle="sidebar"]').on("click", function () {
            $(".app-sidebar").addClass("sidebar-open")
        }), $('[data-dismiss="sidebar"]').on("click", function () {
            $(".app-sidebar").removeClass("sidebar-open")
        })
    }), Date.prototype.addDays = function (e) {
        var t = new Date(this.getTime());
        return t.setDate(this.getDate() + e), t
    }, Date.prototype.addMonths = function (e) {
        var t = this.getFullYear(),
            n = this.getMonth() + e,
            a = new Date(t, n, 1),
            i = new Date(t, n + 1, 0);
        return this.getDate() > i.getDate() ? a.setDate(i.getDate()) : a.setDate(this.getDate()), a
    }, Date.prototype.addYears = function (e) {
        var t = new Date(this.getTime());
        return t.setFullYear(this.getFullYear() + e), t
    },
    function () {
        var e = /\d/,
            t = /[a-zA-Z]/;
        window.keyboard = function (n) {
            var a = String.fromCharCode(n);
            return {
                isArrowDown: 40 === n,
                isArrowUp: 38 === n,
                isBackspace: 8 === n,
                isDelete: 46 === n || 63272 === n,
                isEnter: 13 === n,
                isEscape: 27 === n,
                isLetter: t.test(a),
                isNumber: e.test(a)
            }
        }
    }(), String.prototype.startsWith || (String.prototype.startsWith = function (e, t) {
        return t = t || 0, this.indexOf(e, t) === t
    }), String.prototype.contains = function (e) {
        return new RegExp(e, "i").test(this)
    }, String.prototype.replaceAll = function (e, t) {
        return this.replace(new RegExp(e, "g"), t)
    },
    function (e) {
        e.fn.calendar.change = function (t) {
            var n = e(this);
            n.prop("date", t), e.fn.calendar.query.apply(n, [t]), n.trigger("calendar:change", t)
        }
    }(jQuery),
    function (e) {
        e.fn.calendar.modal = function (t) {
            var n = e(this),
                a = n.find(".modal-header"),
                i = n.find(".modal-body"),
                r = a.find(".dropdown-toggle"),
                o = a.find(".dropdown-menu"),
                s = a.find("[data-calendar-month=previous]"),
                c = a.find("[data-calendar-month=next]"),
                u = a.find(".form-control"),
                f = i.find("[data-calendar-link=today]"),
                d = i.find("[data-calendar-link=selected]");
            n.on("calendar:each", function (t, a) {
                var i = n.calendar("date"),
                    r = new Date;
                r.setHours(0, 0, 0, 0), e(t.relatedTarget).toggleClass("active", !!i && a.getTime() === i.getTime()).toggleClass("today", a.getTime() === r.getTime()).toggleClass("sunday", 0 === a.getDay())
            }), n.on("calendar:query", function (t, n) {
                var a = n.getMonth(),
                    i = e(o.find("a").get(a));
                r.prop("month", n.getMonth()).text(i.text()), u.val(n.getFullYear())
            }), o.find("a").on("click", function (t) {
                var a = Number(u.val()),
                    i = Number(e(this).attr("data-calendar-month"));
                n.calendar("query:date", new Date(a, i, 1)), t.preventDefault()
            }), c.on("click", function () {
                n.calendar("query:nextMonth")
            }), s.on("click", function () {
                n.calendar("query:previousMonth")
            }), f.on("click", function () {
                n.calendar("query:date", new Date)
            }), d.on("click", function () {
                var e = n.calendar("date");
                n.calendar("query:date", e)
            }), u.on("keydown", function (e) {
                var t = e.keyCode || e.which,
                    a = keyboard(t);
                a.isArrowUp && n.calendar("query:nextYear"), a.isArrowDown && n.calendar("query:previousYear")
            }).on("keypress", function (e) {
                var t = e.keyCode || e.which;
                keyboard(t).isNumber || e.preventDefault()
            }).on("input", function () {
                var e = u.val();
                if (/^\d{4}$/.test(e)) {
                    var t = Number(e),
                        a = Number(r.prop("month"));
                    n.calendar("query:date", new Date(t, a, 1))
                }
            })
        }
    }(jQuery), jQuery.fn.calendar.period = function (e, t) {
        var n = new Date(e, t, 1),
            a = new Date(e, t + 1, 0),
            i = new Date(n);
        i.setDate(n.getDate() - n.getDay());
        var r = new Date(a);
        return r.setDate(a.getDate() + (6 - a.getDay())), {
            firstDateInMonth: n,
            lastDateInMonth: a,
            firstDate: i,
            lastDate: r
        }
    },
    function (e) {
        e.fn.calendar.query = function (t) {
            for (var n = e(this), a = n.find(".table-calendar"), i = e("<tbody>"), r = e.fn.calendar.period(t.getFullYear(), t.getMonth()), o = r.firstDate; o <= r.lastDate;) {
                for (var s = e("<tr>"), c = 0; c < 7; c++) {
                    var u = e("<td>"),
                        f = e.Event("calendar:each");
                    if (o.getMonth() === r.firstDateInMonth.getMonth()) {
                        var d = e("<a>").attr("href", "#").prop("date", o).text(o.getDate()).on("click", function (t) {
                            e.fn.calendar.change.apply(n, [e(this).prop("date")]), t.preventDefault()
                        });
                        f.relatedTarget = d.get(0), u.append(d)
                    } else u.text(o.getDate());
                    s.append(u), n.trigger(f, o), o = o.addDays(1)
                }
                i.append(s)
            }
            a.find("tbody").remove(), a.append(i), n.prop("query", t).trigger("calendar:query", t)
        }
    }(jQuery), jQuery.fn.fileManager.read = function (e, t) {
        var n = new FileReader;
        n.readAsDataURL(e), n.onload = function (n) {
            e.dataURL = n.target.result, t()
        }
    },
    function (e) {
        e.fn.fileManager.validate = function (t, n) {
            var a = n.attr("data-maxsize"),
                i = n.attr("data-type");
            t.errors = [], e.fn.fileManager.validate.maxsize(t, a) || t.errors.push("maxsize"), e.fn.fileManager.validate.type(t, i) || t.errors.push("type")
        }
    }(jQuery), jQuery.fn.camera.toBlob = function (e) {
        var t;
        t = e.split(",")[0].indexOf("base64") >= 0 ? atob(e.split(",")[1]) : unescape(e.split(",")[1]);
        for (var n = e.split(",")[0].split(":")[1].split(";")[0], a = new Uint8Array(t.length), i = 0; i < t.length; i++) a[i] = t.charCodeAt(i);
        return new Blob([a], {
            type: n
        })
    }, jQuery.fn.camera.link = function (e, t) {
        if ("srcObject" in e) e.srcObject = t;
        else if (navigator.mozGetUserMedia) e.mozSrcObject = t;
        else {
            var n = window.URL || window.webkitURL || window.mozURL || window.msURL;
            e.src = n.createObjectURL(t)
        }
    },
    function (e) {
        navigator.getSupportedUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia, e.fn.camera.isSupported = function () {
            return !!navigator.getSupportedUserMedia
        }, e.fn.camera.getUserMedia = function (e, t, n) {
            return navigator.getSupportedUserMedia(e, t, n)
        }
    }(jQuery),
    function (e) {
        e.fn.camera.play = function () {
            var t = e(this);
            if (!t.prop("playing")) {
                var n = t.get(0);
                e.fn.camera.isSupported() ? e.fn.camera.getUserMedia({
                    video: !0,
                    audio: !1
                }, function (a) {
                    e.fn.camera.link(n, a), n.play(), t.prop("stream", a), t.prop("playing", !0), t.trigger("camera:play")
                }, function (e) {
                    t.trigger("camera:error", e)
                }) : t.trigger("camera:notSupported")
            }
        }
    }(jQuery),
    function (e) {
        var t = /^(\d+)x(\d+)$/gi;
        e.fn.camera.snapshot = function () {
            var n = e(this);
            if (n.prop("playing")) {
                var a = n.get(0),
                    i = function (e) {
                        if (!e || !e.match(t)) return {
                            width: 320,
                            height: 240
                        };
                        var n = t.exec(e);
                        return {
                            width: n[1],
                            height: n[2]
                        }
                    }(n.attr("data-size")),
                    r = document.createElement("canvas");
                r.width = i.width, r.height = i.height;
                var o = r.getContext("2d");
                o.translate(i.width, 0), o.scale(-1, 1), o.drawImage(a, 0, 0, i.width, i.height);
                var s = r.toDataURL(),
                    c = e.fn.camera.toBlob(s);
                c.dataURL = s, n.trigger("camera:snapshot", c)
            }
        }
    }(jQuery),
    function (e) {
        e.fn.camera.stop = function () {
            var t = e(this);
            if (t.prop("playing")) {
                var n = t.prop("stream");
                if (n.getVideoTracks && "function" == typeof n.getVideoTracks) {
                    var a = n.getVideoTracks();
                    a && a[0] && a[0].stop && a[0].stop()
                } else n.stop && n.stop();
                t.prop("playing", !1), t.prop("stream", null), t.trigger("camera:stop")
            }
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion.async = function () {
            var t = e(this),
                n = t.closest(".input-suggestion").find(".input-suggestion-list"),
                a = n.find(".list-group.items").hide(),
                i = n.find(".list-group.empty").hide(),
                r = n.find(".list-group.loading").hide();
            t.on("input", function () {
                r.show(), i.hide(), a.hide()
            }).on("input:delay suggestion:show", function () {
                t.trigger("suggestion:search")
            }).on("suggestion:refresh", function () {
                e.fn.suggestion.change.apply(this), a.children().length ? a.show() : i.show(), r.hide()
            })
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion.change = function () {
            var t = e(this),
                n = t.closest(".input-suggestion"),
                a = n.find(".input-suggestion-list").find(".list-group.items").children(),
                i = function (n) {
                    t.val(e.fn.suggestion.textOf(n)), t.trigger("suggestion:change", n)
                };
            a.on("click", function () {
                n.removeClass("open"), i(this)
            }), t.on("keypress", function (e) {
                var t = e.keyCode || e.which;
                if (keyboard(t).isEnter) {
                    var n = a.filter(".active");
                    n.length && i(n.filter(".active"))
                }
            })
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion.select = function () {
            var t = e(this),
                n = t.closest(".input-suggestion"),
                a = n.find(".input-suggestion-list").find(".list-group.items"),
                i = function () {
                    n.is(".open") || (a.children().removeClass("active"), n.addClass("open"), t.trigger("suggestion:show"))
                },
                r = function () {
                    n.is(".open") && (n.removeClass("open"), t.trigger("suggestion:hide"))
                };
            n.onFocusOut(r), t.on("input", i).on("keyup", function (e) {
                var t = e.keyCode || e.which;
                keyboard(t).isEscape && r()
            }).on("keydown", function (e) {
                var t = e.keyCode || e.which,
                    r = keyboard(t);
                if (r.isArrowUp || r.isArrowDown) {
                    if (e.preventDefault(), !n.is(".open")) return void i();
                    var o = a.children(".active");
                    if (r.isArrowDown) {
                        if (o.is(":last-child")) return;
                        o.length ? (o.removeClass("active"), o.next().addClass("active")) : a.children().eq(0).addClass("active")
                    }
                    if (r.isArrowUp) {
                        if (o.is(":first-child")) return;
                        o.removeClass("active"), o.prev().addClass("active")
                    }
                }
            }).on("suggestion:change", r)
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion.static = function () {
            var t = e(this),
                n = t.closest(".input-suggestion").find(".input-suggestion-list"),
                a = n.find(".list-group.empty").hide(),
                i = n.find(".list-group.items"),
                r = i.children(),
                o = [],
                s = function () {
                    r.removeClass("active"), o.forEach(function (e) {
                        var t = e.data("prev");
                        t.length ? e.insertAfter(t) : i.prepend(e)
                    }), o = [], r.each(function () {
                        var n = e(this);
                        e.fn.suggestion.textOf(n).contains(t.val()) || (o.push(n), n.data("prev", n.prev()))
                    }), o.forEach(function (e) {
                        e.detach()
                    }), i.children().length ? (a.hide(), i.show()) : (i.hide(), a.show())
                };
            t.on("input", s).on("suggestion:show", s)
        }
    }(jQuery),
    function (e) {
        e.fn.suggestion.textOf = function (t) {
            var n = e(t),
                a = n.closest(".input-suggestion").find("input");
            return a.is("[data-text]") && (n = n.find(a.attr("data-text"))), n.text().trim()
        }
    }(jQuery),
    function (e) {
        var t = /^(\d*\.?\d+)(B|KB|MB|GB)?$/gi,
            n = {
                B: 0,
                KB: 1,
                MB: 2,
                GB: 3
            };
        jQuery.fn.fileManager.validate.maxsize = function (e, a) {
            if (!a) return !0;
            if (!a.match(t)) return !1;
            var i = t.exec(a),
                r = i[1],
                o = i[2];
            return e.size <= (s = r, c = o, Number(s) * Math.pow(1024, n[c]));
            var s, c
        }
    }(), jQuery.fn.fileManager.validate.type = function (e, t) {
        if (!t) return !0;
        var n = "^" + t.replaceAll(",", "|") + "$";
        return new RegExp(n).test(e.type)
    };
